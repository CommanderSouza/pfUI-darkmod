pfUI:RegisterModule("aguimod", function ()
  -- creating the profile of the darkmod.
  -- it's generated by using the `/share` command.
  pfUI_profiles["pfUI [|cff33aa88darkmod|r]"] = {
    ["unitframes"] = {
      ["target"] = {
        ["debuffsize"] = "17",
        ["powercolor"] = "0",
        ["buffsize"] = "17",
        ["healthcolor"] = "0",
        ["height"] = "30",
        ["txtpowerright"] = "powerminmax",
        ["debuffperrow"] = "20",
        ["bartexture"] = "Interface\\AddOns\\pfUI\\img\\bar_tukui",
        ["pspace"] = "1",
        ["width"] = "341",
        ["buffperrow"] = "20",
        ["pheight"] = "15",
      },
      ["player"] = {
        ["debuffsize"] = "17",
        ["powercolor"] = "0",
        ["healthcolor"] = "0",
        ["height"] = "30",
        ["txtpowerright"] = "powerminmax",
        ["debuffperrow"] = "20",
        ["bartexture"] = "Interface\\AddOns\\pfUI\\img\\bar_tukui",
        ["buffsize"] = "17",
        ["buffperrow"] = "20",
        ["pspace"] = "1",
        ["width"] = "339",
        ["pheight"] = "15",
      },
      ["group"] = {
        ["debuffs"] = "off",
        ["hitindicator"] = "1",
        ["hitindicatorfont"] = "Interface\\AddOns\\pfUI\\fonts\\BigNoodleTitling.ttf",
        ["height"] = "20",
        ["buffs"] = "off",
        ["hitindicatorsize"] = "18",
        ["bartexture"] = "Interface\\AddOns\\pfUI\\img\\bar_tukui",
        ["width"] = "100",
        ["hide_in_raid"] = "1",
      },
      ["raid"] = {
        ["txthpcenter"] = "nameshort",
        ["txthpleft"] = "none",
        ["hitindicator"] = "1",
        ["hitindicatorfont"] = "Interface\\AddOns\\pfUI\\fonts\\BigNoodleTitling.ttf",
        ["height"] = "20",
        ["txthpright"] = "none",
        ["debuff_indicator"] = "0",
        ["hitindicatorsize"] = "18",
        ["bartexture"] = "Interface\\AddOns\\pfUI\\img\\bar_tukui",
        ["width"] = "37",
      },
      ["grouppet"] = {
        ["visible"] = "0",
      },
      ["grouptarget"] = {
        ["txthpright"] = "none",
        ["bartexture"] = "Interface\\AddOns\\pfUI\\img\\bar_tukui",
        ["width"] = "100",
      },
      ["customcolor"] = "0.1,0.1,0.1,1",
      ["custombg"] = "1",
      ["custom"] = "1",
      ["ttarget"] = {
        ["height"] = "18",
        ["bartexture"] = "Interface\\AddOns\\pfUI\\img\\bar_tukui",
        ["width"] = "110",
        ["pheight"] = "0",
      },
    },
    ["panel"] = {
      ["other"] = {
        ["minimap"] = "none",
      },
    },
    ["global"] = {
      ["pixelperfect"] = "7",
    },
    ["chat"] = {
      ["global"] = {
        ["border"] = "0,0,0,0",
        ["custombg"] = "1",
        ["background"] = "0,0,0,0",
      },
      ["right"] = {
        ["enable"] = "1",
        ["height"] = "165",
        ["width"] = "420",
      },
      ["left"] = {
        ["height"] = "165",
        ["width"] = "420",
      },
    },
    ["bars"] = {
      ["background"] = "0",
      ["shapeshift"] = {
        ["formfactor"] = "1 x 10",
      },
      ["pet"] = {
        ["formfactor"] = "1 x 10",
      },
      ["bottomright"] = {
        ["formfactor"] = "12 x 1",
      },
      ["right"] = {
        ["formfactor"] = "12 x 1",
      },
    },
  }

  -- make sure that all required modules are loaded. otherwise break and print a message
  if not pfUI.chat or not pfUI.castbar or not pfUI.rep or not pfUI.xp or not
    pfUI.buff or not pfUI.minimap or not pfUI.bars or not pfUI.tracking or not
    pfUI.thirdparty or not pfUI.uf or not pfUI.uf.player or not pfUI.uf.target or not
    pfUI.uf.targettarget or not pfUI.uf.raid or not pfUI.uf.group
  then
    message("|cff33aa88darkmod|r has been disabled. Not all required pfUI modules were loaded")
    message("Reset your config to the defaults and load the \"pfUI [|cff33aa88darkmod|r]\" profile")
    return
  end

  -- make sure that all 4 required actionbars are loaded
  UIOptionsFrame_Load(UIOptionsFrame)
  SHOW_MULTI_ACTIONBAR_1 = 1
  SHOW_MULTI_ACTIONBAR_2 = 1
  SHOW_MULTI_ACTIONBAR_3 = 1
  UIParent_ManageFramePositions()

  -- define and calculate some basic variables to safe some space later.
  local border = tonumber(pfUI_config.appearance.border.default)
  local aborder = tonumber(C.appearance.border.actionbars) == -1 and border or tonumber(C.appearance.border.actionbars)
  local bpad = border > 1 and 1 or 0

  -- move left chat to the bottomleft without padding.
  pfUI.chat.left:SetPoint("BOTTOMLEFT", UIParent, "BOTTOMLEFT", 0, 0)
  UpdateMovable(pfUI.chat.left, true)

  -- move right chat to the bottomleft without padding.
  pfUI.chat.right:SetPoint("BOTTOMRIGHT", UIParent, "BOTTOMRIGHT", 0, 0)
  UpdateMovable(pfUI.chat.right, true)

  -- add a black gradient to the bottom and stretch it up to the chat-tab-bar.
  local bottom = CreateFrame("Frame", nil, UIParent)
  bottom:SetFrameStrata("BACKGROUND")
  bottom:SetPoint("LEFT", UIParent, "LEFT", 0, 0)
  bottom:SetPoint("RIGHT", UIParent, "RIGHT", 0, 0)
  bottom:SetPoint("BOTTOM", UIParent, "BOTTOM", 0, 0)
  bottom:SetPoint("TOP", pfUI.chat.left.panelTop.backdrop, "BOTTOM", 0, -bpad)
  bottom.tex = bottom:CreateTexture("pfGradient", "BACKGROUND")
  bottom.tex:SetAllPoints(bottom)
  bottom.tex:SetTexture(0,0,0,1)
  bottom.tex:SetGradientAlpha("VERTICAL", 0,0,0,1,  0,0,0,0)
  CreateBackdrop(bottom, nil, nil, .65)

  -- make chatinput box fit between chat docks.
  pfUI.chat.editbox:ClearAllPoints()
  pfUI.chat.editbox:SetPoint("TOPLEFT", pfUI.chat.left.panelTop, "TOPRIGHT", border*2, 0)
  pfUI.chat.editbox:SetPoint("BOTTOMRIGHT", pfUI.chat.right.panelTop, "BOTTOMLEFT", -border*2, 0)
  CreateBackdrop(ChatFrameEditBox, nil, nil, .8)
  UpdateMovable(pfUI.chat.editbox, true)

  -- make the castbar fit between both chat docks.
  pfChatArrange:SetScript("OnEvent", nil)
  pfUI.castbar.player:ClearAllPoints()
  pfUI.castbar.player:SetPoint("TOPLEFT", pfUI.chat.left.panelTop, "TOPRIGHT", border*2, 0)
  pfUI.castbar.player:SetPoint("BOTTOMRIGHT", pfUI.chat.right.panelTop, "BOTTOMLEFT", -border*2, 0)
  CreateBackdrop(pfUI.castbar.player, nil, nil, .8)
  UpdateMovable(pfUI.castbar.player, true)

  -- adjust xp and reputation bar height.
  pfUI.xp:SetPoint("TOPLEFT", pfUI.chat.left.panelTop.backdrop, "BOTTOMRIGHT", C.appearance.border.default*2, -bpad)
  pfUI.rep:SetPoint("TOPRIGHT", pfUI.chat.right.panelTop.backdrop, "BOTTOMLEFT", -C.appearance.border.default*2, -bpad)

  -- move buffs to the topright of the screen.
  pfUI.buff.buffs:ClearAllPoints()
  pfUI.buff.buffs:SetPoint("TOPRIGHT", UIParent, "TOPRIGHT", -tonumber(C.buffs.spacing), -tonumber(C.buffs.spacing))
  UpdateMovable(pfUI.buff.buffs, true)

  -- move the minimap to the center bottom.
  pfUI.minimap:ClearAllPoints()
  pfUI.minimap:SetPoint("BOTTOM", UIParent, "BOTTOM", 0, border)
  pfUI.minimap:SetScale(.8)
  pfUI.panel.minimap:SetScale(pfUI.minimap:GetScale())
  UpdateMovable(pfUI.minimap, true)

  -- move the main actionbar bar to the minimap.
  pfUI.bars.actionmain:ClearAllPoints()
  pfUI.bars.actionmain:SetPoint("BOTTOMRIGHT", pfUI.minimap, "BOTTOMLEFT", -2*border, -border)
  UpdateMovable(pfUI.bars.actionmain, true)

  -- move the left actionbar above the main actionbar.
  pfUI.bars.bottomleft:ClearAllPoints()
  pfUI.bars.bottomleft:SetPoint("BOTTOM", pfUI.bars.actionmain, "TOP", 0, aborder)
  UpdateMovable(pfUI.bars.bottomleft, true)

  -- move the right actionbar to the minimap.
  pfUI.bars.right:ClearAllPoints()
  pfUI.bars.right:SetPoint("BOTTOMLEFT", pfUI.minimap, "BOTTOMRIGHT", 2*border, -border)
  UpdateMovable(pfUI.bars.right, true)

  -- move the second right actionbar above the right actionbar.
  pfUI.bars.bottomright:ClearAllPoints()
  pfUI.bars.bottomright:SetPoint("BOTTOM", pfUI.bars.right, "TOP", 0, aborder)
  UpdateMovable(pfUI.bars.bottomright, true)

  -- move the playerframe above the left actionbars.
  pfUI.uf.player:ClearAllPoints()
  pfUI.uf.player:SetPoint("BOTTOMRIGHT", pfUI.bars.bottomleft, "TOPRIGHT", -border, border*2)
  UpdateMovable(pfUI.uf.player, true)

  -- move the targetframe above the right actionbars.
  pfUI.uf.target:ClearAllPoints()
  pfUI.uf.target:SetPoint("BOTTOMLEFT", pfUI.bars.bottomright, "TOPLEFT", border, border*2)
  UpdateMovable(pfUI.uf.target, true)

  -- move the targettargetframe above the minimap.
  pfUI.uf.targettarget:ClearAllPoints()
  pfUI.uf.targettarget:SetPoint("BOTTOM", pfUI.minimap, "TOP", 0, border)
  UpdateMovable(pfUI.uf.targettarget, true)

  -- move the pet unitframe slightly higher to not have it collide with the castbar.
  pfUI.uf.pet:ClearAllPoints()
  pfUI.uf.pet:SetPoint("BOTTOM", UIParent , "BOTTOM", 0, 175)
  UpdateMovable(pfUI.uf.pet, true)

  -- set the position of all raidframes to the top of the left chat panel.
  -- also decrease the spacing and make it more compressed.
  for r=1, 8 do
    for g=1, 5 do
      i = g + 5*(r-1)
      local spacing = pfUI.uf.raid[i].config.pspace
      local width = pfUI.uf.raid[i].config.width
      local height = pfUI.uf.raid[i].config.height
      local pheight = pfUI.uf.raid[i].config.pheight
      local real_height = height + spacing + pheight + 2*border
      pfUI.uf.raid[i]:ClearAllPoints()
      if g == 1 and math.mod(r,2) == 1 then
        pfUI.uf.raid[i]:SetPoint("BOTTOMLEFT", 2, C.chat.left.height - real_height/2 + (r/2)*(real_height+5))
      else
        pfUI.uf.raid[i]:SetPoint("LEFT", pfUI.uf.raid[i-1], "RIGHT", 5, 0)
      end
      UpdateMovable(pfUI.uf.raid[i], true)
    end
  end

  -- set the position of all groupframes to the top of the left chat panel.
  -- also decrease the spacing and make it more compressed.
  for i=1, 4 do
    pfUI.uf.group[i]:ClearAllPoints()
    if i == 1 then
      pfUI.uf.group[i]:SetPoint("BOTTOMLEFT", 2, C.chat.left.height + border)
    else
      pfUI.uf.group[i]:SetPoint("LEFT", pfUI.uf.group[i-1], "RIGHT", 5, 0)
    end

    pfUI.uf.group[i].target:ClearAllPoints()
    pfUI.uf.group[i].target:SetPoint("BOTTOM", pfUI.uf.group[i], "TOP", 0, border)

    UpdateMovable(pfUI.uf.group[i], true)
    UpdateMovable(pfUI.uf.group[i].target, true)
  end

  -- stretch the viewport by cutting off a few pixels at the bottom to not have
  -- the bottom gradient eat too much space and have the character more centered.
  WorldFrame:ClearAllPoints();
  WorldFrame:SetPoint("TOP", UIParent, "TOP", 0, 0)
  WorldFrame:SetPoint("LEFT", UIParent, "LEFT", 0, 0)
  WorldFrame:SetPoint("RIGHT", UIParent, "RIGHT", 0, 0)
  WorldFrame:SetPoint("BOTTOM", pfUI.bars.actionmain, "TOP", 0, 0)

  -- move/merge the tracking icon into the right chattab panel.
  -- also set its parent to make it vanish when the meters are shown.
  pfUI.tracking:ClearAllPoints()
  pfUI.tracking:SetParent(pfUI.chat.right.panelTop)
  pfUI.tracking:SetPoint("RIGHT", pfUI.chat.right.panelTop, "RIGHT", 0, 0)
  pfUI.tracking:SetHeight(pfUI.chat.right.panelTop:GetHeight())
  pfUI.tracking:SetWidth(pfUI.chat.right.panelTop:GetHeight())
  UpdateMovable(pfUI.tracking, true)

  -- set the position of all loot rolls to the top of the right chat panel.
  -- also decrease the spacing and make the width same as the panel.
  for i=1,4 do
    pfUI.roll.frames[i]:ClearAllPoints()
    pfUI.roll.frames[i]:SetPoint("BOTTOMRIGHT", pfUI.chat.right.panelTop, "TOPRIGHT", 0, (i-1)*(26+2*border) + 2*border)
    pfUI.roll.frames[i]:SetPoint("BOTTOMLEFT", pfUI.chat.right.panelTop, "TOPLEFT", 0, (i-1)*(26+2*border) + 2*border)
    pfUI.roll.frames[i]:SetHeight(26)
    UpdateMovable(pfUI.roll.frames[i], true)
  end

  -- create a backdrop of the size and appearance of a chat tab dock.
  local topbg = CreateFrame("Frame", "pfMetersDockTop", UIParent)
  topbg:SetFrameStrata("BACKGROUND")
  topbg:SetAllPoints(pfUI.chat.right.panelTop)
  CreateBackdrop(topbg, nil, nil, .8)
  topbg:Hide()

  -- make the new backdrop toggle when the meters are shown by hooking the
  -- thirdparty-module's toggle function.
  local pfHookMetersToggle = pfUI.thirdparty.meters.Toggle
  pfUI.thirdparty.meters.Toggle = function()
    if pfUI.thirdparty.meters.state == true then
      topbg:Hide()
    else
      topbg:Show()

      -- adjust the position of DPSMates total display to not have it collide with the backdrop.
      if DPSMate_DPSMate_Head and C.thirdparty.dpsmate.dock == "1" then
        DPSMate_DPSMate_Head:SetPoint("TOPLEFT", 0, -2)
        DPSMate_DPSMate_ScrollFrame_Child_Total:SetPoint("TOPLEFT", 0, -3)
      end

      -- set the height of KTMs title to not have it collide with the backdrop.
      if KLHTM_Frame and C.thirdparty.ktm.dock == "1" then
        KLHTM_TitleFrame:SetHeight(21)
      end
    end

    -- run the original function.
    pfHookMetersToggle()
  end

  -- set the position of the shapeshift/stance bars to the right of the screen.
  -- as the positions get overwritten on several events, hook the OnShow function
  -- to make sure that our positions do overwrite the previous ones.
  local pfHookBarsShapeshiftShow = pfUI.bars.shapeshift.Show
  pfUI.bars.shapeshift.Show = function(self)
    pfHookBarsShapeshiftShow(self)
    pfUI.bars.shapeshift:ClearAllPoints()

    if pfUI.bars.pet:IsShown() then
      -- align it to the pet bar if visible.
      pfUI.bars.shapeshift:SetPoint("RIGHT", pfUI.bars.pet, "LEFT", -2*border, 0)
    elseif pfUI.bars.tworight:IsShown() then
      -- align it to the vertical actionbar if visible.
      pfUI.bars.shapeshift:SetPoint("RIGHT", pfUI.bars.tworight, "LEFT", -2*border, 0)
    else
      -- align it to the right of the screen.
      pfUI.bars.shapeshift:SetPoint("RIGHT", UIParent, "RIGHT", -border, 0)
    end
    UpdateMovable(pfUI.bars.shapeshift, true)
  end

  -- set the position of the petactionbars to the right of the screen.
  -- as the positions get overwritten on several events, hook the ClearAllPoints
  -- function to make sure that our positions do overwrite the previous ones.
  local pfHookPetActionBarFrame = PetActionBarFrame.ClearAllPoints
  PetActionBarFrame.ClearAllPoints = function(self)
    pfHookPetActionBarFrame(self)
    pfUI.bars.pet:ClearAllPoints()

    if pfUI.bars.tworight:IsShown() then
      -- align it to the vertical actionbar if visible.
      pfUI.bars.pet:SetPoint("RIGHT", pfUI.bars.tworight, "LEFT", -2*border, 0)
    else
      -- align it to the right of the screen.
      pfUI.bars.pet:SetPoint("RIGHT", UIParent, "RIGHT", -border, 0)
    end
    UpdateMovable(this.pet, true)
  end

  -- move the target castbar into the center of the screen.
  -- also adjust the size (width and height) of it.
  pfUI.castbar.target:ClearAllPoints()
  pfUI.castbar.target:SetPoint("CENTER", 0, -150)
  pfUI.castbar.target:SetWidth(250)
  pfUI.castbar.target:SetHeight(20)
  UpdateMovable(pfUI.castbar.target, true)
end)
